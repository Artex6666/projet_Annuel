<div class="container py-5">
  <div class="row justify-content-center">
    <div class="col-lg-10">
      <div class="card shadow-lg border-0">
        <div class="card-header bg-gradient-primary text-white">
          <h3 class="mb-0">
            <i class="bi bi-truck me-2"></i>
            Gestion de livraison
          </h3>
        </div>
        
        <div class="card-body">
          <div class="row">
            <!-- Informations de la livraison -->
            <div class="col-md-6">
              <h4 class="fw-bold mb-3">
                <i class="bi bi-box-seam text-success me-2"></i>
                <%= livraison.titre %>
              </h4>
              
              <div class="mb-4">
                <h6 class="text-muted mb-2">Description</h6>
                <p class="card-text"><%= livraison.description %></p>
              </div>
              
              <div class="row mb-4">
                <div class="col-6">
                  <h6 class="text-muted mb-2">
                    <i class="bi bi-geo-alt text-primary"></i> Trajet original
                  </h6>
                  <p class="mb-1"><strong>De:</strong> <%= livraison.depart %></p>
                  <p class="mb-0"><strong>√Ä:</strong> <%= livraison.arrivee %></p>
                </div>
                <div class="col-6">
                  <h6 class="text-muted mb-2">
                    <i class="bi bi-truck text-success"></i> Votre livraison
                  </h6>
                  <p class="mb-1"><strong>De:</strong> <%= livraison.depart_livraison || livraison.depart %></p>
                  <p class="mb-0"><strong>√Ä:</strong> <%= livraison.arrivee_livraison || livraison.arrivee %></p>
                </div>
              </div>
              
              <div class="row mb-4">
                <div class="col-6">
                  <h6 class="text-muted mb-2">
                    <i class="bi bi-calendar-event text-info"></i> Date
                  </h6>
                  <p class="mb-0" data-date="<%= livraison.date %>"><%= livraison.date %></p>
                </div>
                <div class="col-6">
                  <h6 class="text-muted mb-2">
                    <i class="bi bi-tag text-info"></i> Type
                  </h6>
                  <p class="mb-0"><%= livraison.type %></p>
                </div>
              </div>
              
              <!-- Progression et gains -->
              <div class="mb-4">
                <h6 class="text-muted mb-2">
                  <i class="bi bi-speedometer2 text-warning"></i> Progression
                </h6>
                <div class="progress mb-2" style="height: 25px;">
                  <div class="progress-bar bg-warning" role="progressbar" 
                       style="width: 0%" 
                       data-progress="<%= livraison.progress_percentage || 0 %>">
                    <span class="fw-bold">0%</span>
                  </div>
                </div>
                <small class="text-muted">Pourcentage du trajet total effectu√©</small>
              </div>
              
              <div class="mb-4">
                <h6 class="text-muted mb-2">
                  <i class="bi bi-cash-coin text-success"></i> R√©mun√©ration
                </h6>
                <div class="d-flex justify-content-between align-items-center">
                  <span>Montant total: <strong><%= livraison.remuneration %> ‚Ç¨</strong></span>
                  <span class="badge bg-success fs-6" id="earnings-badge">
                    Vos gains: <strong id="earnings-amount">0 ‚Ç¨</strong>
                  </span>
                </div>
                <small class="text-muted">Gains proportionnels √† votre contribution</small>
              </div>
              
              <!-- Statut -->
              <div class="mb-4">
                <h6 class="text-muted mb-2">
                  <i class="bi bi-info-circle"></i> Statut
                </h6>
                <% if (livraison.statut === 'livree') { %>
                  <span class="badge bg-success fs-6">
                    <i class="bi bi-check-circle me-1"></i> Livr√©e
                  </span>
                <% } else if (livraison.statut === 'en_attente') { %>
                  <span class="badge bg-warning text-dark fs-6">
                    <i class="bi bi-clock me-1"></i> En cours
                  </span>
                <% } else { %>
                  <span class="badge bg-secondary fs-6"><%= livraison.statut %></span>
                <% } %>
              </div>
            </div>
            
            <!-- Carte -->
            <div class="col-md-6">
              <h6 class="text-muted mb-2">
                <i class="bi bi-map"></i> Visualisation du trajet
              </h6>
              <div id="deliveryMap" style="height: 400px; border: 1px solid #ddd; border-radius: 8px;">
                <div class="d-flex align-items-center justify-content-center h-100">
                  <div class="text-center">
                    <i class="bi bi-map text-muted" style="font-size: 3rem;"></i>
                    <p class="text-muted mt-2">Chargement de la carte...</p>
                  </div>
                </div>
              </div>
            </div>
          </div>
          
          <!-- Actions -->
          <div class="row mt-4">
            <div class="col-12">
              <div class="d-flex gap-3 justify-content-center">
                <% if (livraison.statut !== 'livree') { %>
                  <button type="button" class="btn btn-success btn-lg" 
                          onclick="markDelivered('<%= livraison.id %>')">
                    <i class="bi bi-check-circle me-2"></i>
                    Marquer comme livr√©e
                  </button>
                <% } %>
                
                <a href="/mes-livraisons" class="btn btn-outline-primary btn-lg">
                  <i class="bi bi-arrow-left me-2"></i>
                  Retour aux livraisons
                </a>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css"/>
<link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" />
<script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>

<style>
.bg-gradient-primary {
  background: linear-gradient(135deg, #007bff, #0056b3);
}

.card {
  border-radius: 15px;
  overflow: hidden;
}

.progress {
  border-radius: 10px;
  box-shadow: inset 0 1px 3px rgba(0,0,0,0.1);
}

.progress-bar {
  border-radius: 10px;
  transition: width 0.6s ease;
}

.badge {
  border-radius: 8px;
  padding: 8px 12px;
}

.btn-lg {
  padding: 12px 30px;
  border-radius: 25px;
  font-weight: 600;
  transition: all 0.3s ease;
}

.btn-success:hover {
  transform: translateY(-2px);
  box-shadow: 0 6px 20px rgba(40, 167, 69, 0.3);
}

.btn-outline-primary:hover {
  transform: translateY(-2px);
  box-shadow: 0 6px 20px rgba(0, 123, 255, 0.3);
}
</style>

<script>
let map;
let deliveryMarkers = [];

// Donn√©es de la livraison depuis le serveur
const livraisonData = <%- JSON.stringify({
  id: livraison.id,
  titre: livraison.titre,
  depart: livraison.depart,
  arrivee: livraison.arrivee,
  depart_livraison: livraison.depart_livraison || livraison.depart,
  arrivee_livraison: livraison.arrivee_livraison || livraison.arrivee,
  progress_percentage: livraison.progress_percentage || 0,
  remuneration: livraison.remuneration_calculated || livraison.remuneration || 0
}) %>;

document.addEventListener('DOMContentLoaded', function() {
  initDeliveryMap();
  updateProgressBarColor();
  updateEarnings();
});

function initDeliveryMap() {
  map = L.map('deliveryMap').setView([46.603354, 1.888334], 6);
  
  L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
    attribution: '¬© OpenStreetMap contributors'
  }).addTo(map);
  
  // G√©ocoder et afficher les routes
  Promise.all([
    geocodeAddress(livraisonData.depart),
    geocodeAddress(livraisonData.arrivee),
    geocodeAddress(livraisonData.depart_livraison),
    geocodeAddress(livraisonData.arrivee_livraison)
  ]).then(([origDepart, origArrivee, delivDepart, delivArrivee]) => {
    if (origDepart && origArrivee) {
      // Route originale (pointill√©s bleus)
      L.polyline([
        [origDepart.lat, origDepart.lng],
        [origArrivee.lat, origArrivee.lng]
      ], {
        color: '#007bff',
        weight: 3,
        opacity: 0.7,
        dashArray: '10, 10'
      }).addTo(map);
      
      // Marqueurs origine
      L.marker([origDepart.lat, origDepart.lng])
        .addTo(map)
        .bindPopup('<b>üè† D√©part original</b><br>' + livraisonData.depart);
      
      L.marker([origArrivee.lat, origArrivee.lng])
        .addTo(map)
        .bindPopup('<b>üéØ Destination finale</b><br>' + livraisonData.arrivee);
    }
    
    if (delivDepart && delivArrivee) {
      // Route de livraison (vert)
      L.polyline([
        [delivDepart.lat, delivDepart.lng],
        [delivArrivee.lat, delivArrivee.lng]
      ], {
        color: '#28a745',
        weight: 4,
        opacity: 0.8
      }).addTo(map);
      
      // Marqueurs livraison
      L.marker([delivDepart.lat, delivDepart.lng])
        .addTo(map)
        .bindPopup('<b>üöÄ D√©part livraison</b><br>' + livraisonData.depart_livraison);
      
      L.marker([delivArrivee.lat, delivArrivee.lng])
        .addTo(map)
        .bindPopup('<b>üìç Arriv√©e livraison</b><br>' + livraisonData.arrivee_livraison);
      
      // Ligne pointill√©e jaune si livraison partielle
      if (origArrivee && delivArrivee && (livraisonData.arrivee_livraison !== livraisonData.arrivee)) {
        L.polyline([
          [delivArrivee.lat, delivArrivee.lng],
          [origArrivee.lat, origArrivee.lng]
        ], {
          color: '#ffc107',
          weight: 3,
          opacity: 0.8,
          dashArray: '8, 8'
        }).addTo(map);
      }
      
      // Ajuster la vue
      const group = new L.featureGroup([
        L.marker([origDepart.lat, origDepart.lng]),
        L.marker([origArrivee.lat, origArrivee.lng]),
        L.marker([delivDepart.lat, delivDepart.lng]),
        L.marker([delivArrivee.lat, delivArrivee.lng])
      ]);
      map.fitBounds(group.getBounds().pad(0.1));
    }
  }).catch(error => {
    console.error('Erreur lors du g√©ocodage:', error);
  });
}

async function geocodeAddress(address) {
  try {
    const response = await fetch('https://api.axia.quest/annonces/geocode?q=' + encodeURIComponent(address) + '&limit=1');
    const data = await response.json();
    
    if (data && data.length > 0) {
      const result = data[0];
      return {
        lat: parseFloat(result.lat),
        lng: parseFloat(result.lon)
      };
    }
  } catch (error) {
    console.error('Erreur g√©ocodage:', error);
  }
  return null;
}

function updateProgressBarColor() {
  const progressBar = document.querySelector('.progress-bar');
  const progress = livraisonData.progress_percentage;
  
  // Mettre √† jour la largeur et le texte
  progressBar.style.width = progress + '%';
  progressBar.querySelector('span').textContent = Math.round(progress) + '%';
  
  // Mettre √† jour la couleur
  progressBar.className = 'progress-bar';
  if (progress >= 75) {
    progressBar.classList.add('bg-success');
  } else if (progress >= 50) {
    progressBar.classList.add('bg-warning');
  } else if (progress >= 25) {
    progressBar.classList.add('bg-info');
  } else if (progress > 0) {
    progressBar.classList.add('bg-danger');
  } else {
    progressBar.classList.add('bg-warning');
  }
}

function updateEarnings() {
  const earnings = (livraisonData.remuneration * livraisonData.progress_percentage / 100).toFixed(2);
  document.getElementById('earnings-amount').textContent = earnings + ' ‚Ç¨';
}

async function markDelivered(livraisonId) {
  if (!confirm('√ätes-vous s√ªr de vouloir marquer cette livraison comme termin√©e ?')) {
    return;
  }
  
  try {
    const response = await fetch('https://api.axia.quest/api/livraisons/' + livraisonId + '/livrer', {
      method: 'POST',
      credentials: 'include'
    });
    
    if (response.ok) {
      window.location.href = '/mes-livraisons';
    } else {
      const error = await response.json();
      alert('Erreur: ' + (error.error || 'Impossible de marquer la livraison'));
    }
  } catch (error) {
    console.error('Erreur:', error);
    alert('Erreur r√©seau lors du marquage de la livraison');
  }
}
</script> 